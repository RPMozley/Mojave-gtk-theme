
//
// avatar
//

avatar {
  border-radius: $circular_radius;
  font-weight: bold;

  // The list of colors to generate avatars.
  // Each avatar color is represented by a font color, a gradient start color and a gradient stop color.
  // There are 8 different colors for avtars in the list if you change the number of them you
  // need to update the NUMBER_OF_COLORS in src/adw-avatar.c.
  // The 2D list has this form: ((font-color, gradient-top-color, gradient-bottom-color)).
  $avatarcolorlist: (
   (#cfe1f5, #83b6ec, #337fdc), // blue
   (#caeaf2, #7ad9f1, #0f9ac8), // cyan
   (#cef8d8, #8de6b1, #29ae74), // green
   (#e6f9d7, #b5e98a, #6ab85b), // lime
   (#f9f4e1, #f8e359, #d29d09), // yellow
   (#ffead1, #ffcb62, #d68400), // gold
   (#ffe5c5, #ffa95a, #ed5b00), // orange
   (#f8d2ce, #f78773, #e62d42), // raspberry
   (#fac7de, #e973ab, #e33b6a), // magenta
   (#e7c2e8, #cb78d4, #9945b5), // purple
   (#d5d2f5, #9e91e8, #7a59ca), // violet
   (#f2eade, #e3cf9c, #b08952), // beige
   (#e5d6ca, #be916d, #785336), // brown
   (#d8d7d3, #c0bfbc, #6e6d71), // gray
  );

  @for $i from 1 through length($avatarcolorlist) {
    &.color#{$i} {
      $avatarcolor: nth($avatarcolorlist, $i);
      background-image: linear-gradient(nth($avatarcolor, 2), nth($avatarcolor, 3));
      color: nth($avatarcolor, 1);
    }
  }

  &.contrasted { color: white; }

  &.image { background: none; }
}

//
// preferencespage
//

preferencespage > scrolledwindow > viewport > clamp > box {
  margin: 24px 12px;
  border-spacing: 24px;
}

preferencesgroup > box {
  &, .labels {
    border-spacing: $container_padding;
  }

  > box.header:not(.single-line) {
    margin-bottom: $container_padding;
  }

  > box.single-line {
    min-height: 34px;
  }
}

//
// AdwStatusPage
//

statuspage {
  > scrolledwindow > viewport > box {
    margin: 36px $container_padding * 2;
    border-spacing: 36px;

    > clamp > box {
      border-spacing: $container_padding * 2;

      > .icon {
        -gtk-icon-size: 128px;

        color: gtkalpha(currentColor, 0.55);

        &:disabled {
          opacity: $disabled_opacity;
        }

        &:not(:last-child) {
          margin-bottom: 24px;
        }
      }
    }
  }

  &.compact > scrolledwindow > viewport > box {
    margin: 24px 12px;
    border-spacing: 24px;

    > clamp > box {
      > .icon {
        -gtk-icon-size: 96px;

        &:not(:last-child) {
          margin-bottom: $container_padding * 2;
        }
      }

      > .title {
        font-size: 18pt;
      }
    }
  }
}


//
// Cards
//

.card {
  @extend %circular_list;
  color: $text_color;

  .osd &, &.osd {
    background-color: gtkalpha(currentColor, .1);
    color: inherit;
    box-shadow: none;

    &:focus:focus-visible {
      outline-color: $fill_color;
    }
  }

  &.activatable {
    transition: $button_transition;

    &:hover {
      background-image: image(gtkalpha(currentColor, .03));
    }

    &:active {
      background-image: image(gtkalpha(currentColor, .08));
    }
  }
}

button.card {
  @if $variant == 'light' {
    border: 1px solid $dark_borders_color;
    background-clip: padding-box;
    @include button(normal);
  } @else {
    border: none;
  }

  &:hover {
    @include button(flat-hover);
  }

  &:active {
    @include button(flat-active);
    border-color: if($variant == 'light', rgba(black, 0.6), $borders_color);
  }
}

//
// Toasts
//

toast {
  @extend %osd;
  margin: $container_padding * 2;
  margin-bottom: $container_padding * 3;
  border-radius: $circular_radius;
  border-spacing: $container_padding;
  padding: $container_padding;
  outline: 1px solid rgba(white, 0.1);
  outline-offset: -1px;
  box-shadow: 0 3px 8px rgba(black, 0.15),
              0 0 0 1px rgba(black, if($variant == 'light', 0.15, 0.75));

  &:dir(ltr) { padding-left: $container_padding * 2; }
  &:dir(rtl) { padding-right: $container_padding * 2; }

  button {
    @extend %osd_button;

    &.circular {
      // &:hover {
      //   background-color: $destructive_color;
      //   color: white;
      // }

      &:active {
        // background-color: darken($destructive_color, 8%);
        background-color: $destructive_color;
      }
    }
  }

  > widget {
    margin: 0 $container_padding;
  }
}

//
// viewswitcher
//

viewswitcher {
  margin: 0;

  &.wide {
    border-spacing: $container_padding / 2;

    button.toggle {
      margin: $container_padding 0;
    }
  }

  &.narrow button.toggle {
    border-radius: 0;
    margin: 0;

    indicatorbin > image {
      -gtk-icon-size: 12px;
    }
  }

  button.toggle {
    font-weight: normal;
    padding: 0;

    > stack > box {
      &.narrow {
        font-size: 0.75rem;
        padding-top: $container_padding + 1px;
        padding-bottom: $container_padding - 1px;
        border-spacing: $container_padding - 2px;

        > stack > label {
          padding-left: $container_padding + 2px;
          padding-right: $container_padding + 2px;
        }
      }

      &.wide {
        padding: 0 $container_padding * 2;
        border-spacing: $container_padding;
      }
    }
  }
}

// AdwViewSwitcherBar
viewswitcherbar actionbar > revealer > box {
  padding: 0;
}

// AdwViewSwitcherTitle
viewswitchertitle {
  margin-top: 0;
  margin-bottom: 0;

  viewswitcher {
    margin-left: $container_padding * 2;
    margin-right: $container_padding * 2;

    &.narrow {
      margin-top: 0;
      margin-bottom: 0;

      button.toggle {
        > stack > box {
          &.narrow {
            padding-top: 0;
            padding-bottom: 0;
            border-spacing: 0;
          }
        }
      }
    }

    &.wide {
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  windowtitle {
    margin-top: 0;
    margin-bottom: 0;
  }
}

// AdwIndicatorBin
indicatorbin {
  > indicator, > mask {
    min-width: $container_padding * 2;
    min-height: $container_padding * 2;
    border-radius: $circular_radius;
    margin: 0;
  }

  > indicator {
    margin: 1px;
    background: gtkalpha(currentColor, .4);

    > label {
      font-size: 0.6rem;
      font-weight: normal;
      padding: 1px 4px;
      color: white;
    }
  }

  > mask {
    padding: 0;
    background: black;
  }

  > image {
    -gtk-icon-size: 16px;
    margin-top: -4px;
    margin-bottom: -4px;
  }

  &.needs-attention > indicator {
    background: $selected_bg_color;

    > label { color: $selected_fg_color; }
  }
}


//
// Tab View
//

tabbar {
  .box {
    min-height: 28px;
  }

  tabbox {
    padding: 0;
    margin: 0;
    background-color: darken($header_bg, 10%);
    box-shadow: none;
    border-bottom: 1px solid $solid_borders_color;

    > tabboxchild {
      padding: 0;
      margin: 0 -3px;
      border-radius: 0;
    }

    > tab,
    > tabboxchild > tab {
      @extend %tabs_tab;
      border-radius: 0;
      padding: 3px 6px;
      border: solid $solid_borders_color;
      border-width: 0 1px;

      &:checked { border-top-color: $header_bg; }

      button.tab-close-button {
        border-radius: 3px;
        border: none;
        padding: 0;
        min-height: 20px;
        min-width: 20px;
        // margin-top: 2px;
        // margin-bottom: 2px;
        @extend %flat_button;

        &:hover {
          color: $fg_color;
          background-color: rgba($borders_color, 0.1);
        }

        &:active, &:active:hover {
          color: if($variant == 'light', darken($fg_color, 10%), lighten($fg_color, 10%));
          background-color: rgba($borders_color, 0.2);
        }
      }
    }

    > separator {
      margin: 0;
      background-color: darken($header_bg, 10%);

      &.hidden {
        opacity: 0;
      }
    }

    > revealer > indicator {
      min-width: 2px;
      border-radius: 2px;
      background: gtkalpha($selected_bg_color, 0.5);
    }
  }

  .start-action,
  .end-action {
    padding: $container_padding;
  }

  .start-action:dir(ltr),
  .end-action:dir(rtl) {
    padding-right: 0;
  }

  .start-action:dir(rtl),
  .end-action:dir(ltr) {
    padding-left: 0;
  }

  &:not(.inline) {
    .box {
      background-color: $bg_color;
      color: $text_color;
      margin-top: -1px;
      padding: 0;
      box-shadow: inset 0 -1px $borders_color;
      border-bottom: none;
    }

    &:backdrop .box {
      > scrolledwindow,
      > .start-action,
      > .end-action {
        filter: opacity(0.5);
      }
    }
  }
}

dnd tab {
  background-color: $base_color;
  color: $text_color;
  box-shadow: none;
  margin: $container_padding * 4;
}

tabbar,
dnd {
  tab {
    padding-right: $container_padding / 2;
    margin: 0;
    @extend %tabs_tab;

    + tab {
      margin-left: $container_padding / 2;
    }

    button.tab-close-button {
      border-radius: 3px;
      min-height: $small_size;
      min-width: $small_size;
      padding: 0;
    }

    indicator {
      min-height: 2px;
      border-radius: 2px;
      background: gtkalpha($selected_bg_color, 0.5);
    }
  }
}

tabview:drop(active),
tabbox:drop(active) {
  box-shadow: none;
}

// Transition shadows
flap,
leaflet,
navigation-view,
overlay-split-view {
  @include transition-shadows($dark_borders_color);
}

toolbarview.undershoot-top scrolledwindow {
  @include undershoot(top);
}

toolbarview.undershoot-bottom scrolledwindow {
  @include undershoot(bottom);
}

// Sidebar
.unfolded stacksidebar.sidebar { border: none; }

.sidebar-pane {
  background-color: $dark_sidebar_bg;
  color: $dark_sidebar_fg;

  &:backdrop {
    background-color: $dark_sidebar_bg;
    // transition: background-color $longer_duration $deceleration_curve;
  }

  .sidebar,
  .toolbar,
  .navigation-sidebar,
  searchbar > revealer > box {
    background-color: transparent;
    box-shadow: none;
    border: none;
  }

  toolbarview.undershoot-top scrolledwindow {
    @include undershoot(top, $style: 'compact');
  }

  toolbarview.undershoot-bottom scrolledwindow {
    @include undershoot(bottom, $style: 'compact');
  }

  scrolledwindow {
    &.undershoot-top {
      @include undershoot(top, $style: 'compact');
    }

    &.undershoot-bottom {
      @include undershoot(bottom, $style: 'compact');
    }

    &.undershoot-start {
      &:dir(ltr) { @include undershoot(left, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(right, $style: 'compact'); }
    }

    &.undershoot-end {
      &:dir(ltr) { @include undershoot(right, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(left, $style: 'compact'); }
    }
  }

  flap,
  leaflet,
  navigation-view,
  overlay-split-view {
    @include transition-shadows($dark_borders_color);
  }

  banner > revealer > widget {
    background-color: gtkmix($selected_bg_color, $dark_sidebar_bg, 30%);
    color: $text_color;

    &:backdrop {
      background-color: gtkmix($selected_bg_color, $dark_sidebar_bg, 30%);
    }
  }

  &:dir(ltr), &.end:dir(rtl) {
    &, banner > revealer > widget {
      box-shadow: inset -1px 0 6px rgba(black, if($variant == 'light', 0.04, 0.08));
      border-right: 1px solid $dark_sidebar_border;
    }
  }

  &:dir(rtl), &.end:dir(ltr) {
    &, banner > revealer > widget {
      box-shadow: inset 1px 0 6px rgba(black, if($variant == 'light', 0.04, 0.08));
      border-left: 1px solid $dark_sidebar_border;
    }
  }
}

/* Middle pane in three-pane setups */
.content-pane .sidebar-pane,
.sidebar-pane .content-pane {
  background-color: $base_color;
  color: $text_color;

  &:backdrop {
    background-color: $base_color;
    // transition: background-color $longer_duration $deceleration_curve;
  }

  toolbarview.undershoot-top scrolledwindow {
    @include undershoot(top, $style: 'compact');
  }

  toolbarview.undershoot-bottom scrolledwindow {
    @include undershoot(bottom, $style: 'compact');
  }

  scrolledwindow {
    &.undershoot-top {
      @include undershoot(top, $style: 'compact');
    }

    &.undershoot-bottom {
      @include undershoot(bottom, $style: 'compact');
    }

    &.undershoot-start {
      &:dir(ltr) { @include undershoot(left, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(right, $style: 'compact'); }
    }

    &.undershoot-end {
      &:dir(ltr) { @include undershoot(right, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(left, $style: 'compact'); }
    }
  }

  flap,
  leaflet,
  navigation-view,
  overlay-split-view {
    @include transition-shadows($dark_borders_color);
  }

  banner > revealer > widget {
    background-color: gtkmix($selected_bg_color, $base_color, 30%);
    color: $text_color;

    &:backdrop {
      background-color: gtkmix($selected_bg_color, $base_color, 30%);
    }
  }

  &:dir(ltr), &.end:dir(rtl) {
    &, banner > revealer > widget {
      box-shadow: inset -1px 0 6px rgba(black, if($variant == 'light', 0.04, 0.08));
      border-right: 1px solid $dark_sidebar_border;
    }
  }

  &:dir(rtl), &.end:dir(ltr) {
    &, banner > revealer > widget {
      box-shadow: inset 1px 0 6px rgba(black, if($variant == 'light', 0.04, 0.08));
      border-left: 1px solid $dark_sidebar_border;
    }
  }
}

.sidebar-pane .sidebar-pane {
  background-color: transparent;
  color: inherit;
}

.content-pane {
  background-color: $base_color;

  toolbarview {
    &, &.view {
      background-color: transparent;
    }

    > stack, > box > stack.view {
      background-color: transparent;
    }
  }

  toolbarview.undershoot-top scrolledwindow {
    @include undershoot(top, $style: 'compact');
  }

  toolbarview.undershoot-bottom scrolledwindow {
    @include undershoot(bottom, $style: 'compact');
  }

  scrolledwindow {
    &.undershoot-top {
      @include undershoot(top, $style: 'compact');
    }

    &.undershoot-bottom {
      @include undershoot(bottom, $style: 'compact');
    }

    &.undershoot-start {
      &:dir(ltr) { @include undershoot(left, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(right, $style: 'compact'); }
    }

    &.undershoot-end {
      &:dir(ltr) { @include undershoot(right, $style: 'compact'); }
      &:dir(rtl) { @include undershoot(left, $style: 'compact'); }
    }
  }
}

%flat_header_button {
  &, &.image-button {
    min-height: 26px;
  }

  @include button(flat-normal);

  &:hover { @include button(flat-hover); }
  &:active, &:checked { @include button(flat-active); }
  &:checked:hover { background-image: none; }
  &:disabled { @include button(flat-insensitive); }

  .linked:not(.vertical) > & {
    &:not(:hover):not(:active):not(:checked):not(:disabled) {
      background-color: if($variant=='light', rgba(black, 0.06), rgba(white, 0.06));
    }
  }
}

// Gnome >= 45.0
.sidebar-pane,
.content-pane {
  headerbar {
    &, &:backdrop {
      background-color: transparent;
      background-image: none;
      box-shadow: none;
      border: none;
    }

    button:not(.close):not(.minimize):not(.maximize) { @extend %flat_header_button; }

    box.start > button.image-button {
      min-height: 20px;
    }

    .linked:not(.vertical) > entry {
      min-height: 22px;
      padding: 2px 8px;
      border: none;
      background-color: if($variant=='light', rgba(black, 0.06), rgba(white, 0.06));

      &:focus-within {
        background-color: if($variant=='light', rgba(black, 0.06), rgba(white, 0.06));
        &:not(:only-child) { box-shadow: inset 0 0 0 2px $entry_highlight; }
      }
    }
  }
}

.top-bar {
  box-shadow: none;
  border: none;
  background: none;

  .collapse-spacing {
    padding: 0;
  }
}

// ThemeSelector
themeselector, // Gnome text editor
panelthemeselector { // Gnome builder
  margin: 9px;

  checkbutton {
    padding: 0;
    min-height: 44px;
    min-width: 44px;
    padding: 1px;
    background-clip: content-box;
    border-radius: $circular_radius;
    box-shadow: inset 0 0 0 1px $borders_color;

    &.follow:checked,
    &.light:checked,
    &.dark:checked {
      box-shadow: inset 0 0 0 2px $primary_color;
    }

    &.follow {
      background-image: linear-gradient(to bottom right, #ffffff 50%, #202020 50%);
    }

    &.light {
      background-color: #ffffff;
    }

    &.dark {
      background-color: #202020;
    }

    &.theme-selector radio {
      -gtk-icon-source: none;
      border: none;
      background: none;
      box-shadow: none;
      min-height: 16px;
      min-width: 16px;
      padding: 2px;

      &:hover, &:active, &:checked {
        background-color: transparent;
      }

      &:checked {
        -gtk-icon-size: 16px;
        -gtk-icon-source: -gtk-icontheme('object-select-symbolic');
        color: white;
        background-color: $primary_color;

        &, &:hover, &:active {
          box-shadow: 0 2px 3px -1px rgba(black, 0.08), 0 1px 2px 0 rgba(black, 0.1);
        }
      }
    }
  }
}

themeswitcher { // Gnome console
  padding: 6px;

  .check {
    min-height: 20px;
    min-width: 20px;
    background: none;
    padding: 0;
    margin: 0;
    border-radius: $circular_radius;
    color: white;
    background-color: $primary_color;

    &, &:hover, &:active {
      box-shadow: 0 2px 3px -1px rgba(black, 0.08), 0 1px 2px 0 rgba(black, 0.1);
    }
  }

  checkbutton {
    padding: 0;
    min-height: 44px;
    min-width: 44px;
    padding: 1px;
    background-clip: content-box;
    border-radius: $circular_radius;
    box-shadow: inset 0 0 0 1px $borders_color;

    &:checked {
      box-shadow: inset 0 0 0 2px $primary_color;
    }

    radio {
      &, &:hover, &:active, &:checked, &:checked:hover, &:checked:active {
        background-color: transparent;
        border: none;
        background: none;
        box-shadow: none;
        color: transparent;
        -gtk-icon-source: none;
        -gtk-icon-size: 0;
      }
    }

    &.system {
      background: linear-gradient(-45deg, #1e1e1e 50%, white 50%);
    }

    &.light {
      color: gtkalpha(black, .8);
      background-color: white;
    }

    &.dark {
      color: white;
      background-color: #1e1e1e;
    }
  }
}
